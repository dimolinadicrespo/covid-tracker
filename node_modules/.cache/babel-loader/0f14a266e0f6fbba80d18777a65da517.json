{"ast":null,"code":"import _regeneratorRuntime from\"/Users/molia/projects/js/react/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/molia/projects/js/react/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import environment from'./../environment/environment.js';export var fetchGlobalData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var api,_yield$api$json,active,deaths,recovered,cases;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(environment.total.global);case 2:api=_context.sent;_context.next=5;return api.json();case 5:_yield$api$json=_context.sent;active=_yield$api$json.active;deaths=_yield$api$json.deaths;recovered=_yield$api$json.recovered;cases=_yield$api$json.cases;return _context.abrupt(\"return\",{active:active,deaths:deaths,recovered:recovered,cases:cases});case 11:case\"end\":return _context.stop();}}},_callee);}));return function fetchGlobalData(){return _ref.apply(this,arguments);};}();export var fetchCountryData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(contryCode){var api;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(environment.total.countries,\"/\").concat(contryCode));case 2:api=_context2.sent;return _context2.abrupt(\"return\",api.json());case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchCountryData(_x){return _ref2.apply(this,arguments);};}();export var fetchGlobalDataTimeline=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var api,response,cases,deaths,recovered;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"\".concat(environment.timeLine.global));case 2:api=_context3.sent;_context3.next=5;return api.json();case 5:response=_context3.sent;cases=response.cases,deaths=response.deaths,recovered=response.recovered;return _context3.abrupt(\"return\",{cases:cases,deaths:deaths,recovered:recovered});case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function fetchGlobalDataTimeline(){return _ref3.apply(this,arguments);};}();export var fetchCountryDataTimeLine=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(contryCode){var api,response,_response$timeline,cases,deaths,recovered;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(\"\".concat(environment.timeLine.countries,\"/\").concat(contryCode));case 2:api=_context4.sent;_context4.next=5;return api.json();case 5:response=_context4.sent;if(!response.hasOwnProperty('timeline')){_context4.next=11;break;}_response$timeline=response.timeline,cases=_response$timeline.cases,deaths=_response$timeline.deaths,recovered=_response$timeline.recovered;return _context4.abrupt(\"return\",{cases:cases,deaths:deaths,recovered:recovered});case 11:return _context4.abrupt(\"return\",{cases:0,deaths:0,recovered:0});case 12:case\"end\":return _context4.stop();}}},_callee4);}));return function fetchCountryDataTimeLine(_x2){return _ref4.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/molia/projects/js/react/covid19/src/api/index.js"],"names":["environment","fetchGlobalData","fetch","total","global","api","json","active","deaths","recovered","cases","fetchCountryData","contryCode","countries","fetchGlobalDataTimeline","timeLine","response","fetchCountryDataTimeLine","hasOwnProperty","timeline"],"mappings":"uTAAA,MAAOA,CAAAA,WAAP,KAAwB,iCAAxB,CAEA,MAAO,IAAMC,CAAAA,eAAe,0FAAI,+MACZC,CAAAA,KAAK,CAACF,WAAW,CAACG,KAAZ,CAAkBC,MAAnB,CADO,QACxBC,GADwB,qCAEwBA,CAAAA,GAAG,CAACC,IAAJ,EAFxB,sCAEpBC,MAFoB,iBAEpBA,MAFoB,CAEZC,MAFY,iBAEZA,MAFY,CAEJC,SAFI,iBAEJA,SAFI,CAEOC,KAFP,iBAEOA,KAFP,iCAGrB,CAACH,MAAM,CAANA,MAAD,CAASC,MAAM,CAANA,MAAT,CAAiBC,SAAS,CAATA,SAAjB,CAA4BC,KAAK,CAALA,KAA5B,CAHqB,yDAAJ,kBAAfT,CAAAA,eAAe,0CAArB,CAMP,MAAO,IAAMU,CAAAA,gBAAgB,2FAAI,kBAAOC,UAAP,qJACbV,CAAAA,KAAK,WAAIF,WAAW,CAACG,KAAZ,CAAkBU,SAAtB,aAAmCD,UAAnC,EADQ,QACzBP,GADyB,iDAEtBA,GAAG,CAACC,IAAJ,EAFsB,0DAAJ,kBAAhBK,CAAAA,gBAAgB,6CAAtB,CAKP,MAAO,IAAMG,CAAAA,uBAAuB,2FAAG,uMACnBZ,CAAAA,KAAK,WAAIF,WAAW,CAACe,QAAZ,CAAqBX,MAAzB,EADc,QAC/BC,GAD+B,uCAEbA,CAAAA,GAAG,CAACC,IAAJ,EAFa,QAE/BU,QAF+B,gBAG5BN,KAH4B,CAGAM,QAHA,CAG5BN,KAH4B,CAGrBF,MAHqB,CAGAQ,QAHA,CAGrBR,MAHqB,CAGbC,SAHa,CAGAO,QAHA,CAGbP,SAHa,kCAI3B,CAACC,KAAK,CAALA,KAAD,CAAQF,MAAM,CAANA,MAAR,CAAgBC,SAAS,CAATA,SAAhB,CAJ2B,0DAAH,kBAAvBK,CAAAA,uBAAuB,2CAA7B,CAOP,MAAO,IAAMG,CAAAA,wBAAwB,2FAAG,kBAAML,UAAN,wMACpBV,CAAAA,KAAK,WAAIF,WAAW,CAACe,QAAZ,CAAqBF,SAAzB,aAAsCD,UAAtC,EADe,QAChCP,GADgC,uCAEdA,CAAAA,GAAG,CAACC,IAAJ,EAFc,QAEhCU,QAFgC,oBAGhCA,QAAQ,CAACE,cAAT,CAAwB,UAAxB,CAHgC,8CAIIF,QAAQ,CAACG,QAJb,CAIxBT,KAJwB,oBAIxBA,KAJwB,CAIjBF,MAJiB,oBAIjBA,MAJiB,CAITC,SAJS,oBAITA,SAJS,kCAKzB,CAAEC,KAAK,CAALA,KAAF,CAASF,MAAM,CAANA,MAAT,CAAiBC,SAAS,CAATA,SAAjB,CALyB,2CAOzB,CAAEC,KAAK,CAAG,CAAV,CAAaF,MAAM,CAAG,CAAtB,CAAyBC,SAAS,CAAG,CAArC,CAPyB,2DAAH,kBAAxBQ,CAAAA,wBAAwB,8CAA9B","sourcesContent":["import environment from './../environment/environment.js';\n\nexport const fetchGlobalData =  async () => {\n    let api = await fetch(environment.total.global);\n    const { active, deaths, recovered, cases }  = await api.json();        \n    return {active, deaths, recovered, cases};\n}\n\nexport const fetchCountryData =  async (contryCode) => {\n    let api = await fetch(`${environment.total.countries}/${contryCode}`);    \n    return api.json();\n}\n\nexport const fetchGlobalDataTimeline = async () => {\n    let api = await fetch(`${environment.timeLine.global}`);\n    let response  = await api.json(); \n    const {cases, deaths, recovered} = response;\n    return  {cases, deaths, recovered}\n}\n\nexport const fetchCountryDataTimeLine = async(contryCode) => {\n    let api = await fetch(`${environment.timeLine.countries}/${contryCode}`);\n    let response  = await api.json();    \n    if (response.hasOwnProperty('timeline')) {\n        const { cases, deaths, recovered} = response.timeline;    \n        return { cases, deaths, recovered}; \n    } else {\n        return { cases : 0, deaths : 0, recovered : 0}\n    }   \n}"]},"metadata":{},"sourceType":"module"}