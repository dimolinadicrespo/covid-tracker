{"ast":null,"code":"var isEmoji=function isEmoji(str){var ranges=[\"(?:[\\u2700-\\u27BF]|(?:\\uD83C[\\uDDE6-\\uDDFF]){2}|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[#-9]\\uFE0F?\\u20E3|\\u3299|\\u3297|\\u303D|\\u3030|\\u24C2|\\uD83C[\\uDD70-\\uDD71]|\\uD83C[\\uDD7E-\\uDD7F]|\\uD83C\\uDD8E|\\uD83C[\\uDD91-\\uDD9A]|\\uD83C[\\uDDE6-\\uDDFF]|[\\uD83C[\\uDE01-\\uDE02]|\\uD83C\\uDE1A|\\uD83C\\uDE2F|[\\uD83C[\\uDE32-\\uDE3A]|[\\uD83C[\\uDE50-\\uDE51]|\\u203C|\\u2049|[\\u25AA-\\u25AB]|\\u25B6|\\u25C0|[\\u25FB-\\u25FE]|\\xA9|\\xAE|\\u2122|\\u2139|\\uD83C\\uDC04|[\\u2600-\\u26FF]|\\u2B05|\\u2B06|\\u2B07|\\u2B1B|\\u2B1C|\\u2B50|\\u2B55|\\u231A|\\u231B|\\u2328|\\u23CF|[\\u23E9-\\u23F3]|[\\u23F8-\\u23FA]|\\uD83C\\uDCCF|\\u2934|\\u2935|[\\u2190-\\u21FF])\"// U+1F680 to U+1F6FF\n];if(str.match(ranges.join('|'))){return true;}else{return false;}};var countryToFlag=function countryToFlag(isoCode){if(isEmoji(isoCode)){return isoCode;}else{return typeof String.fromCodePoint!=='undefined'?isoCode.toUpperCase().replace(/./g,function(char){return String.fromCodePoint(char.charCodeAt(0)+127397);}):isoCode;}};var formatDataToChart=function formatDataToChart(dataTimeLine){var cases=dataTimeLine.cases,deaths=dataTimeLine.deaths,recovered=dataTimeLine.recovered;var dates=Object.keys(cases);var data={labels:dates,datasets:[{label:'Active cases',borderColor:'#ff914d',data:Object.values(cases)},{label:'Deceased',borderColor:'#FF6384',data:Object.values(deaths)},{label:'Recovered',borderColor:'#008037',data:Object.values(recovered)}]};return data;};export{countryToFlag,isEmoji,formatDataToChart};// const data = {\n//     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n//     datasets: [{\n//         label: 'My First dataset',            \n//         borderColor: 'rgb(255, 99, 132)',\n//         data: [0, 10, 5, 2, 20, 30, 45]\n//     },\n//     {\n//         label: 'My First asdf',            \n//         borderColor: '#2eb2ff',\n//         data: [0, 10, 5, 2, 12, 2, 1]\n//     }]\n// }","map":{"version":3,"sources":["/Users/molia/projects/js/react/covid19/src/helpers/helpers.js"],"names":["isEmoji","str","ranges","match","join","countryToFlag","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","formatDataToChart","dataTimeLine","cases","deaths","recovered","dates","Object","keys","data","labels","datasets","label","borderColor","values"],"mappings":"AAAA,GAAMA,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,GAAD,CAAS,CACrB,GAAIC,CAAAA,MAAM,CAAG,CACT,olBAAmmB;AAD1lB,CAAb,CAGA,GAAID,GAAG,CAACE,KAAJ,CAAUD,MAAM,CAACE,IAAP,CAAY,GAAZ,CAAV,CAAJ,CAAiC,CAC7B,MAAO,KAAP,CACH,CAFD,IAEO,CACH,MAAO,MAAP,CACH,CACJ,CATD,CAWA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,OAAD,CAAa,CAC/B,GAAIN,OAAO,CAACM,OAAD,CAAX,CAAsB,CAClB,MAAOA,CAAAA,OAAP,CACH,CAFD,IAEO,CACH,MAAO,OAAOC,CAAAA,MAAM,CAACC,aAAd,GAAgC,WAAhC,CACLF,OAAO,CACJG,WADH,GAEGC,OAFH,CAEW,IAFX,CAEiB,SAACC,IAAD,QAAUJ,CAAAA,MAAM,CAACC,aAAP,CAAqBG,IAAI,CAACC,UAAL,CAAgB,CAAhB,EAAqB,MAA1C,CAAV,EAFjB,CADK,CAILN,OAJF,CAKH,CACJ,CAVD,CAYA,GAAMO,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,YAAD,CAAkB,IACjCC,CAAAA,KADiC,CACLD,YADK,CACjCC,KADiC,CAC1BC,MAD0B,CACLF,YADK,CAC1BE,MAD0B,CAClBC,SADkB,CACLH,YADK,CAClBG,SADkB,CAExC,GAAMC,CAAAA,KAAK,CAAGC,MAAM,CAACC,IAAP,CAAYL,KAAZ,CAAd,CACA,GAAMM,CAAAA,IAAI,CAAG,CACTC,MAAM,CAAEJ,KADC,CAETK,QAAQ,CAAE,CAAC,CACPC,KAAK,CAAE,cADA,CAEPC,WAAW,CAAE,SAFN,CAGPJ,IAAI,CAAEF,MAAM,CAACO,MAAP,CAAcX,KAAd,CAHC,CAAD,CAKV,CACIS,KAAK,CAAE,UADX,CAEIC,WAAW,CAAE,SAFjB,CAGIJ,IAAI,CAAEF,MAAM,CAACO,MAAP,CAAcV,MAAd,CAHV,CALU,CAUV,CACIQ,KAAK,CAAE,WADX,CAEIC,WAAW,CAAE,SAFjB,CAGIJ,IAAI,CAAEF,MAAM,CAACO,MAAP,CAAcT,SAAd,CAHV,CAVU,CAFD,CAAb,CAkBA,MAAOI,CAAAA,IAAP,CACH,CAtBD,CAwBA,OAAQhB,aAAR,CAAuBL,OAAvB,CAAgCa,iBAAhC,EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const isEmoji = (str) => {\n    var ranges = [\n        '(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|[\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|[\\ud83c[\\ude32-\\ude3a]|[\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])' // U+1F680 to U+1F6FF\n    ];\n    if (str.match(ranges.join('|'))) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst countryToFlag = (isoCode) => {\n    if (isEmoji(isoCode)) {\n        return isoCode;\n    } else {            \n        return typeof String.fromCodePoint !== 'undefined'\n        ? isoCode\n            .toUpperCase()\n            .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n        : isoCode;\n    }\n}\n\nconst formatDataToChart = (dataTimeLine) => {\n    const {cases, deaths, recovered} = dataTimeLine;\n    const dates = Object.keys(cases);\n    const data = {\n        labels: dates,\n        datasets: [{\n            label: 'Active cases',            \n            borderColor: '#ff914d',\n            data: Object.values(cases)\n        },\n        {\n            label: 'Deceased',            \n            borderColor: '#FF6384',\n            data: Object.values(deaths)\n        },\n        {\n            label: 'Recovered',            \n            borderColor: '#008037',\n            data: Object.values(recovered)\n        }]\n    }\n    return data;\n}\n\nexport {countryToFlag, isEmoji, formatDataToChart};\n\n// const data = {\n//     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n//     datasets: [{\n//         label: 'My First dataset',            \n//         borderColor: 'rgb(255, 99, 132)',\n//         data: [0, 10, 5, 2, 20, 30, 45]\n//     },\n//     {\n//         label: 'My First asdf',            \n//         borderColor: '#2eb2ff',\n//         data: [0, 10, 5, 2, 12, 2, 1]\n//     }]\n// }\n"]},"metadata":{},"sourceType":"module"}