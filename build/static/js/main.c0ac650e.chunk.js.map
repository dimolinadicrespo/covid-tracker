{"version":3,"sources":["components/SwitcherTheme.js","components/Header.js","components/Card.js","constant/countries.js","helpers/helpers.js","components/Select.js","components/Footer.js","environment/environment.js","api/index.js","App.js","serviceWorker.js","index.js"],"names":["Chk","styled","input","dark","name","body_color","card_color","number_color","text_color","SwitcherTheme","theme","setTheme","type","onChange","e","Object","entries","length","localStorage","setItem","JSON","stringify","checked","HeaderContainer","header","Img","img","Header","src","alt","srcset","CardStyled","div","props","color","Icon","i","Title","AnimatedNumberContainer","span","TextMuted","Card","numberCases","loading","className","value","formatValue","number","Intl","NumberFormat","format","duration","moment","countries","code","label","isEmoji","str","match","join","formatDataToChart","dataTimeLine","cases","deaths","recovered","labels","keys","datasets","borderColor","data","values","SelecStyled","Select","setCountry","country","setLoading","defaultProps","options","getOptionLabel","option","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","Autocomplete","id","placeholder","renderInput","params","TextField","margin","event","FooterStyled","footer","Footer","environment","production","total","global","timeLine","fetchGlobalData","a","fetch","api","json","active","fetchCountryData","contryCode","fetchGlobalDataTimeline","response","fetchCountryDataTimeLine","hasOwnProperty","timeline","Main","Container","CardWrapper","ChartWrapper","App","themeData","parse","getItem","useState","timeLineData","setTimeLineData","state","setstate","getGlobalData","getGlobalDataTimeLine","getCountryData","countryCode","getTimelineCountryData","useEffect","scales","yAxes","ticks","callback","index","width","height","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c0ac650e.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Chk = styled.input`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    -webkit-appearance: none;\n    background-color: #757575;  \n    width: 30px;\n    height: 16px;  \n    border-radius: 100px;\n    transition: all ease 0.5s;  \n\n    &:after{\n        content: \"\";\n        width: 14px;\n        height: 14px;\n        top: 1px;\n        background-color: white;\n        position: absolute;\n        border-radius: 100px;\n        right: 15px;    \n        transition: all ease 0.5s;\n    }\n\n    &:checked&:after{\n        right: 1px;            \n    }\n    &:checked{\n        background-color: #2eb2ff;     \n    }\n`;\n\n\nconst dark = {\n    name : 'dark',\n    body_color: '#e0e0e0',    \n    card_color: '#bdbdbd',    \n    number_color: '#fafafa',    \n    text_color: '#424242'    \n};\n\n\nconst SwitcherTheme = ({theme, setTheme}) => {\n\n    const changeTheme = (e) => {\n        if (Object.entries(theme).length === 0) {\n            localStorage.setItem('theme-data', JSON.stringify(dark));\n            setTheme(dark);            \n        } else {\n            localStorage.setItem('theme-data', JSON.stringify({}));\n            setTheme({});\n        }               \n    }\n\n    return (\n        <Chk type=\"checkbox\" onChange={changeTheme} checked={Object.entries(theme).length === 0 ? false : true}/>\n    );    \n}\n \nexport default SwitcherTheme;","import React from 'react';\nimport styled from '@emotion/styled';\nimport SwitcherTheme from './SwitcherTheme.js';\n\nconst HeaderContainer = styled.header`\n    position: relative;\n    display: flex;\n    align-items : center;\n    justify-content : center;\n`;\n\nconst Img = styled.img`\n    width: 200px;\n    height: 200px;\n`;\n\n\nconst Header = ({theme, setTheme}) => {\n    return (\n        <HeaderContainer>\n            <SwitcherTheme theme={theme} setTheme={setTheme}></SwitcherTheme>\n            <Img src=\"logo.png\" alt=\"\" srcset=\"\"/>\n        </HeaderContainer>\n    );\n}\n \nexport default Header;","import React from 'react';\nimport styled from '@emotion/styled';\nimport AnimatedNumber from 'animated-number-react';\nimport moment from 'moment';\n\nconst CardStyled = styled.div`\n    margin: 5px;    \n    background-color: ${props => props.theme.card_color};\n    transition: all ease 0.8s;\n    display: flex;\n    flex-direction: column;\n    max-width: 200px;\n    min-width: 200px;\n    padding: 16px;\n    border-bottom: 5px solid ${props => props.color || 'turquoise'};\n    border-top-left-radius: 50px 20px;\n    box-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12);\n`;\n\nconst Icon = styled.i`\n    color: ${props => props.color || 'inherit'};\n    margin-right: 5px;\n`;\n\nconst Title = styled.div`\n    font-size: 18px;\n`;\n\nconst AnimatedNumberContainer = styled.span`\n    font-size: 30px;\n    color: ${props => props.theme.number_color || '#9e9e9e'};\n    transition: all ease 0.5s;\n`;\n\nconst TextMuted = styled.span`\n    color: ${props => props.theme.number_color || '#777'};\n    font-size: 15px;\n    transition: all ease 0.5s;\n`;\n\n\nconst Card = ({color, type, numberCases, loading}) => {   \n\n    const formatValue = (number) => new Intl.NumberFormat(\"es-ES\").format(number);\n       \n    return (\n    <CardStyled color={color}>\n        <Title>\n            <Icon color={color} className={loading ? 'fas fa-spinner fa-pulse' : 'fas fa-virus'} ></Icon>                                            \n            <span>{type}</span>\n        </Title>\n        <AnimatedNumberContainer>\n            <AnimatedNumber \n                value={numberCases}\n                formatValue={formatValue}\n                duration={300}/>\n        </AnimatedNumberContainer>\n        <TextMuted>Number of cases {type} at {moment().format('ll')}</TextMuted>        \n    </CardStyled>\n    );\n}\n \nexport default Card;","const countries = [\n    { code: '🌎', label: 'Global'  },\n    { code: 'AD', label: 'Andorra' },\n    { code: 'AE', label: 'United Arab Emirates' },\n    { code: 'AF', label: 'Afghanistan' },\n    { code: 'AG', label: 'Antigua and Barbuda' },\n    { code: 'AI', label: 'Anguilla' },\n    { code: 'AL', label: 'Albania' },\n    { code: 'AM', label: 'Armenia' },\n    { code: 'AO', label: 'Angola' },\n    { code: 'AQ', label: 'Antarctica' },\n    { code: 'AR', label: 'Argentina' },\n    { code: 'AS', label: 'American Samoa' },\n    { code: 'AT', label: 'Austria' },\n    { code: 'AU', label: 'Australia' },\n    { code: 'AW', label: 'Aruba' },\n    { code: 'AX', label: 'Alland Islands' },\n    { code: 'AZ', label: 'Azerbaijan' },\n    { code: 'BA', label: 'Bosnia and Herzegovina' },\n    { code: 'BB', label: 'Barbados' },\n    { code: 'BD', label: 'Bangladesh' },\n    { code: 'BE', label: 'Belgium' },\n    { code: 'BF', label: 'Burkina Faso' },\n    { code: 'BG', label: 'Bulgaria' },\n    { code: 'BH', label: 'Bahrain' },\n    { code: 'BI', label: 'Burundi' },\n    { code: 'BJ', label: 'Benin' },\n    { code: 'BL', label: 'Saint Barthelemy' },\n    { code: 'BM', label: 'Bermuda' },\n    { code: 'BN', label: 'Brunei Darussalam' },\n    { code: 'BO', label: 'Bolivia' },\n    { code: 'BR', label: 'Brazil' },\n    { code: 'BS', label: 'Bahamas' },\n    { code: 'BT', label: 'Bhutan' },\n    { code: 'BV', label: 'Bouvet Island' },\n    { code: 'BW', label: 'Botswana' },\n    { code: 'BY', label: 'Belarus' },\n    { code: 'BZ', label: 'Belize' },\n    { code: 'CA', label: 'Canada' },\n    { code: 'CC', label: 'Cocos (Keeling) Islands' },\n    { code: 'CD', label: 'Congo, Democratic Republic of the' },\n    { code: 'CF', label: 'Central African Republic' },\n    { code: 'CG', label: 'Congo, Republic of the' },\n    { code: 'CH', label: 'Switzerland' },\n    { code: 'CI', label: \"Cote d'Ivoire\" },\n    { code: 'CK', label: 'Cook Islands' },\n    { code: 'CL', label: 'Chile' },\n    { code: 'CM', label: 'Cameroon' },\n    { code: 'CN', label: 'China' },\n    { code: 'CO', label: 'Colombia' },\n    { code: 'CR', label: 'Costa Rica' },\n    { code: 'CU', label: 'Cuba' },\n    { code: 'CV', label: 'Cape Verde' },\n    { code: 'CW', label: 'Curacao' },\n    { code: 'CX', label: 'Christmas Island' },\n    { code: 'CY', label: 'Cyprus' },\n    { code: 'CZ', label: 'Czech Republic' },\n    { code: 'DE', label: 'Germany' },\n    { code: 'DJ', label: 'Djibouti' },\n    { code: 'DK', label: 'Denmark' },\n    { code: 'DM', label: 'Dominica' },\n    { code: 'DO', label: 'Dominican Republic' },\n    { code: 'DZ', label: 'Algeria' },\n    { code: 'EC', label: 'Ecuador' },\n    { code: 'EE', label: 'Estonia' },\n    { code: 'EG', label: 'Egypt' },\n    { code: 'EH', label: 'Western Sahara' },\n    { code: 'ER', label: 'Eritrea' },\n    { code: 'ES', label: 'Spain' },\n    { code: 'ET', label: 'Ethiopia' },\n    { code: 'FI', label: 'Finland' },\n    { code: 'FJ', label: 'Fiji' },\n    { code: 'FK', label: 'Falkland Islands (Malvinas)' },\n    { code: 'FM', label: 'Micronesia, Federated States of' },\n    { code: 'FO', label: 'Faroe Islands' },\n    { code: 'FR', label: 'France' },\n    { code: 'GA', label: 'Gabon' },\n    { code: 'GB', label: 'United Kingdom' },\n    { code: 'GD', label: 'Grenada' },\n    { code: 'GE', label: 'Georgia' },\n    { code: 'GF', label: 'French Guiana' },\n    { code: 'GG', label: 'Guernsey' },\n    { code: 'GH', label: 'Ghana' },\n    { code: 'GI', label: 'Gibraltar' },\n    { code: 'GL', label: 'Greenland' },\n    { code: 'GM', label: 'Gambia' },\n    { code: 'GN', label: 'Guinea' },\n    { code: 'GP', label: 'Guadeloupe' },\n    { code: 'GQ', label: 'Equatorial Guinea' },\n    { code: 'GR', label: 'Greece' },\n    { code: 'GS', label: 'South Georgia and the South Sandwich Islands' },\n    { code: 'GT', label: 'Guatemala' },\n    { code: 'GU', label: 'Guam' },\n    { code: 'GW', label: 'Guinea-Bissau' },\n    { code: 'GY', label: 'Guyana' },\n    { code: 'HK', label: 'Hong Kong' },\n    { code: 'HM', label: 'Heard Island and McDonald Islands' },\n    { code: 'HN', label: 'Honduras' },\n    { code: 'HR', label: 'Croatia' },\n    { code: 'HT', label: 'Haiti' },\n    { code: 'HU', label: 'Hungary' },\n    { code: 'ID', label: 'Indonesia' },\n    { code: 'IE', label: 'Ireland' },\n    { code: 'IL', label: 'Israel' },\n    { code: 'IM', label: 'Isle of Man' },\n    { code: 'IN', label: 'India' },\n    { code: 'IO', label: 'British Indian Ocean Territory' },\n    { code: 'IQ', label: 'Iraq' },\n    { code: 'IR', label: 'Iran, Islamic Republic of' },\n    { code: 'IS', label: 'Iceland' },\n    { code: 'IT', label: 'Italy' },\n    { code: 'JE', label: 'Jersey' },\n    { code: 'JM', label: 'Jamaica' },\n    { code: 'JO', label: 'Jordan' },\n    { code: 'JP', label: 'Japan' },\n    { code: 'KE', label: 'Kenya' },\n    { code: 'KG', label: 'Kyrgyzstan' },\n    { code: 'KH', label: 'Cambodia' },\n    { code: 'KI', label: 'Kiribati' },\n    { code: 'KM', label: 'Comoros' },\n    { code: 'KN', label: 'Saint Kitts and Nevis' },\n    { code: 'KP', label: \"Korea, Democratic People's Republic of\" },\n    { code: 'KR', label: 'Korea, Republic of' },\n    { code: 'KW', label: 'Kuwait' },\n    { code: 'KY', label: 'Cayman Islands' },\n    { code: 'KZ', label: 'Kazakhstan' },\n    { code: 'LA', label: \"Lao People's Democratic Republic\" },\n    { code: 'LB', label: 'Lebanon' },\n    { code: 'LC', label: 'Saint Lucia' },\n    { code: 'LI', label: 'Liechtenstein' },\n    { code: 'LK', label: 'Sri Lanka' },\n    { code: 'LR', label: 'Liberia' },\n    { code: 'LS', label: 'Lesotho' },\n    { code: 'LT', label: 'Lithuania' },\n    { code: 'LU', label: 'Luxembourg' },\n    { code: 'LV', label: 'Latvia' },\n    { code: 'LY', label: 'Libya' },\n    { code: 'MA', label: 'Morocco' },\n    { code: 'MC', label: 'Monaco' },\n    { code: 'MD', label: 'Moldova, Republic of' },\n    { code: 'ME', label: 'Montenegro' },\n    { code: 'MF', label: 'Saint Martin (French part)' },\n    { code: 'MG', label: 'Madagascar' },\n    { code: 'MH', label: 'Marshall Islands' },\n    { code: 'MK', label: 'Macedonia, the Former Yugoslav Republic of' },\n    { code: 'ML', label: 'Mali' },\n    { code: 'MM', label: 'Myanmar' },\n    { code: 'MN', label: 'Mongolia' },\n    { code: 'MO', label: 'Macao' },\n    { code: 'MP', label: 'Northern Mariana Islands' },\n    { code: 'MQ', label: 'Martinique' },\n    { code: 'MR', label: 'Mauritania' },\n    { code: 'MS', label: 'Montserrat' },\n    { code: 'MT', label: 'Malta' },\n    { code: 'MU', label: 'Mauritius' },\n    { code: 'MV', label: 'Maldives' },\n    { code: 'MW', label: 'Malawi' },\n    { code: 'MX', label: 'Mexico' },\n    { code: 'MY', label: 'Malaysia' },\n    { code: 'MZ', label: 'Mozambique' },\n    { code: 'NA', label: 'Namibia' },\n    { code: 'NC', label: 'New Caledonia' },\n    { code: 'NE', label: 'Niger' },\n    { code: 'NF', label: 'Norfolk Island' },\n    { code: 'NG', label: 'Nigeria' },\n    { code: 'NI', label: 'Nicaragua' },\n    { code: 'NL', label: 'Netherlands' },\n    { code: 'NO', label: 'Norway' },\n    { code: 'NP', label: 'Nepal' },\n    { code: 'NR', label: 'Nauru' },\n    { code: 'NU', label: 'Niue' },\n    { code: 'NZ', label: 'New Zealand' },\n    { code: 'OM', label: 'Oman' },\n    { code: 'PA', label: 'Panama' },\n    { code: 'PE', label: 'Peru' },\n    { code: 'PF', label: 'French Polynesia' },\n    { code: 'PG', label: 'Papua New Guinea' },\n    { code: 'PH', label: 'Philippines' },\n    { code: 'PK', label: 'Pakistan' },\n    { code: 'PL', label: 'Poland' },\n    { code: 'PM', label: 'Saint Pierre and Miquelon' },\n    { code: 'PN', label: 'Pitcairn' },\n    { code: 'PR', label: 'Puerto Rico' },\n    { code: 'PS', label: 'Palestine, State of' },\n    { code: 'PT', label: 'Portugal' },\n    { code: 'PW', label: 'Palau' },\n    { code: 'PY', label: 'Paraguay' },\n    { code: 'QA', label: 'Qatar' },\n    { code: 'RE', label: 'Reunion' },\n    { code: 'RO', label: 'Romania' },\n    { code: 'RS', label: 'Serbia' },\n    { code: 'RU', label: 'Russian Federation' },\n    { code: 'RW', label: 'Rwanda' },\n    { code: 'SA', label: 'Saudi Arabia' },\n    { code: 'SB', label: 'Solomon Islands' },\n    { code: 'SC', label: 'Seychelles' },\n    { code: 'SD', label: 'Sudan' },\n    { code: 'SE', label: 'Sweden' },\n    { code: 'SG', label: 'Singapore' },\n    { code: 'SH', label: 'Saint Helena' },\n    { code: 'SI', label: 'Slovenia' },\n    { code: 'SJ', label: 'Svalbard and Jan Mayen' },\n    { code: 'SK', label: 'Slovakia' },\n    { code: 'SL', label: 'Sierra Leone' },\n    { code: 'SM', label: 'San Marino' },\n    { code: 'SN', label: 'Senegal' },\n    { code: 'SO', label: 'Somalia' },\n    { code: 'SR', label: 'Suriname' },\n    { code: 'SS', label: 'South Sudan' },\n    { code: 'ST', label: 'Sao Tome and Principe' },\n    { code: 'SV', label: 'El Salvador' },\n    { code: 'SX', label: 'Sint Maarten (Dutch part)' },\n    { code: 'SY', label: 'Syrian Arab Republic' },\n    { code: 'SZ', label: 'Swaziland' },\n    { code: 'TC', label: 'Turks and Caicos Islands' },\n    { code: 'TD', label: 'Chad' },\n    { code: 'TF', label: 'French Southern Territories' },\n    { code: 'TG', label: 'Togo' },\n    { code: 'TH', label: 'Thailand' },\n    { code: 'TJ', label: 'Tajikistan' },\n    { code: 'TK', label: 'Tokelau' },\n    { code: 'TL', label: 'Timor-Leste' },\n    { code: 'TM', label: 'Turkmenistan' },\n    { code: 'TN', label: 'Tunisia' },\n    { code: 'TO', label: 'Tonga' },\n    { code: 'TR', label: 'Turkey' },\n    { code: 'TT', label: 'Trinidad and Tobago' },\n    { code: 'TV', label: 'Tuvalu' },\n    { code: 'TW', label: 'Taiwan, Province of China' },\n    { code: 'TZ', label: 'United Republic of Tanzania' },\n    { code: 'UA', label: 'Ukraine' },\n    { code: 'UG', label: 'Uganda' },\n    { code: 'US', label: 'United States' },\n    { code: 'UY', label: 'Uruguay' },\n    { code: 'UZ', label: 'Uzbekistan' },\n    { code: 'VA', label: 'Holy See (Vatican City State)' },\n    { code: 'VC', label: 'Saint Vincent and the Grenadines' },\n    { code: 'VE', label: 'Venezuela' },\n    { code: 'VG', label: 'British Virgin Islands' },\n    { code: 'VI', label: 'US Virgin Islands' },\n    { code: 'VN', label: 'Vietnam' },\n    { code: 'VU', label: 'Vanuatu' },\n    { code: 'WF', label: 'Wallis and Futuna' },\n    { code: 'WS', label: 'Samoa' },\n    { code: 'XK', label: 'Kosovo' },\n    { code: 'YE', label: 'Yemen' },\n    { code: 'YT', label: 'Mayotte' },\n    { code: 'ZA', label: 'South Africa' },\n    { code: 'ZM', label: 'Zambia' },\n    { code: 'ZW', label: 'Zimbabwe' },\n  ];\n\n  export default countries;","const isEmoji = (str) => {\n    var ranges = [\n        '(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|[\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|[\\ud83c[\\ude32-\\ude3a]|[\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])' // U+1F680 to U+1F6FF\n    ];\n    if (str.match(ranges.join('|'))) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst countryToFlag = (isoCode) => {\n    if (isEmoji(isoCode)) {\n        return isoCode;\n    } else {            \n        return typeof String.fromCodePoint !== 'undefined'\n        ? isoCode\n            .toUpperCase()\n            .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n        : isoCode;\n    }\n}\n\nconst formatDataToChart = (dataTimeLine) => {\n    const {cases, deaths, recovered} = dataTimeLine;\n    const dates = Object.keys(cases);\n    const data = {\n        labels: dates,\n        datasets: [{\n            label: 'Diagnosed',  \n            color: 'red',          \n            borderColor: '#2eb2ff',\n            data: Object.values(cases)\n        },\n        {\n            label: 'Deceased',            \n            borderColor: '#FF6384',\n            data: Object.values(deaths)\n        },\n        {\n            label: 'Recovered',            \n            borderColor: '#008037',\n            data: Object.values(recovered)\n        }]\n    }\n    return data;\n}\n\nexport {countryToFlag, isEmoji, formatDataToChart};","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport countries from './../constant/countries.js';\nimport styled from '@emotion/styled';\nimport { countryToFlag } from './../helpers/helpers.js';\n\n\nconst SelecStyled = styled.div`\n    width : 250px;\n    margin: 0px auto 25px;\n`;\n\nconst Select = ({setCountry, country, setLoading}) => {\n\n    const defaultProps = {\n        options: countries,\n        getOptionLabel: (option) => countryToFlag(option.code)  + option.label,\n    };\n\n    const onChangeCountry = (event, value) =>{\n        if (value !== null) {\n            setLoading(true);\n            setCountry(value);\n        }  \n    } \n\n    return (\n        <SelecStyled>\n            <Autocomplete\n                {...defaultProps}\n                id=\"Contries\"\n                placeholder='Global'\n                value={country}                                               \n                renderInput={(params) => <TextField {...params} label=\"Contries\" margin=\"none\" \n                />}\n                onChange={onChangeCountry}\n            />\n        </SelecStyled>\n    );\n}\n \nexport default Select;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst FooterStyled = styled.footer`\n    display: flex;\n    justify-content: center;\n    color: ${props => props.theme.text_color}; \n    padding: 10px; \n`;\n\n\nconst Footer = () => {\n    return (<FooterStyled>© 2020 Covid19 Tracker</FooterStyled>)\n}\n \nexport default Footer;\n\n","const environment = {\n    production: false,\n    environment: 'LOCAL',\n    total : {\n        countries: 'https://disease.sh/v2/countries',\n        global: 'https://disease.sh/v2/all',\n    },\n    timeLine : {\n        global: 'https://disease.sh/v2/historical/all?lastdays=30',\n        countries : 'https://disease.sh/v2/historical'\n    }    \n};\n\nexport default environment;","import environment from './../environment/environment.js';\n\nexport const fetchGlobalData =  async () => {\n    let api = await fetch(environment.total.global);\n    const { active, deaths, recovered, cases }  = await api.json();        \n    return {active, deaths, recovered, cases};\n}\n\nexport const fetchCountryData =  async (contryCode) => {\n    let api = await fetch(`${environment.total.countries}/${contryCode}`);    \n    return api.json();\n}\n\nexport const fetchGlobalDataTimeline = async () => {\n    let api = await fetch(`${environment.timeLine.global}`);\n    let response  = await api.json(); \n    const {cases, deaths, recovered} = response;\n    return  {cases, deaths, recovered}\n}\n\nexport const fetchCountryDataTimeLine = async(contryCode) => {\n    let api = await fetch(`${environment.timeLine.countries}/${contryCode}`);\n    let response  = await api.json();    \n    if (response.hasOwnProperty('timeline')) {\n        const { cases, deaths, recovered} = response.timeline;    \n        return { cases, deaths, recovered}; \n    } else {\n        return { cases : 0, deaths : 0, recovered : 0}\n    }   \n}","import React, { Fragment, useEffect, useState } from 'react';\nimport Header from './components/Header.js';\nimport Card from './components/Card.js';\nimport Select from './components/Select.js';\nimport Footer from './components/Footer.js';\nimport styled from '@emotion/styled';\nimport { ThemeProvider } from 'emotion-theming'\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport {fetchGlobalData, fetchCountryData, fetchCountryDataTimeLine, fetchGlobalDataTimeline} from './api';\nimport {isEmoji, formatDataToChart} from './helpers/helpers.js';\nimport { Line } from 'react-chartjs-2';\n\nconst Main = styled.div`\n    margin: auto;\n    width: 95%;    \n`;\nconst Container = styled.div`    \n    width: 100%;\n    height:100%;\n    min-height: 100vh;\n    transition: all ease 0.5s; \n    background-color: ${props => props.theme.body_color};     \n`;\n\nconst CardWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`;\n\nconst ChartWrapper = styled.div`\n    max-width: 1500px;\n    max-height: 900px;\n    margin: auto;\n    padding: 25px;\n`;\n\nfunction App() {\n\n    let themeData = JSON.parse(localStorage.getItem('theme-data'));    \n    if (!themeData) {\n        themeData = {}\n    }\n\n    const [theme, setTheme] = useState(themeData);\n\n    const [country, setCountry] = useState({ code: '🌎', label: 'Global'  });    \n    const [timeLineData, setTimeLineData] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [state, setstate] = useState({\n        active: 0,\n        cases: 0,\n        deaths: 0,\n        recovered: 0\n    });\n\n    const {active, cases, deaths, recovered} = state;\n\n    const getGlobalData = async () => {\n        let response = await fetchGlobalData();\n        setLoading(false);\n        setstate(response);        \n    }\n\n    const getGlobalDataTimeLine = async () => {\n        let response = await fetchGlobalDataTimeline();\n        setLoading(false);\n        let data =  formatDataToChart(response);\n        setTimeLineData(data);       \n    }\n    const getCountryData = async (countryCode) => {\n        let response = await fetchCountryData(countryCode);\n        setLoading(false);\n        setstate(response);        \n    }\n    const getTimelineCountryData = async (countryCode) => {\n        let response = await fetchCountryDataTimeLine(countryCode);          \n        let data =  formatDataToChart(response);         \n        setTimeLineData(data);            \n    }\n\n    \n    useEffect(() => {\n        if (isEmoji(country.code)){\n            getGlobalData();\n            getGlobalDataTimeLine();\n        } else {\n            getTimelineCountryData(country.code);\n            getCountryData(country.code);\n        }             \n    }, [country]);\n    \n    let options = {\n        scales: {\n            yAxes: [{\n                ticks:{     \n                    callback: function(value, index, values) {                        \n                        return new Intl.NumberFormat(\"es-ES\").format(value);\n                    }\n                },\n                \n            }]\n        }        \n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container>\n                <Header theme={theme} setTheme={setTheme}></Header> \n                <Main>\n                    <Select setCountry={setCountry} country={country} setLoading={setLoading}></Select>\n                    <CardWrapper>\n                        <Card color={'#2eb2ff'} type={'Diagnosed'} numberCases={cases} loading={loading}></Card>   \n                        <Card color={'#008037'} type={'Recovered'} numberCases={recovered} loading={loading}></Card>   \n                        <Card color={'#FF6384'} type={'Deceased'} numberCases={deaths} loading={loading}></Card>   \n                        <Card color={'#ff914d'} type={'Active'} numberCases={active} loading={loading}></Card>       \n                    </CardWrapper> \n                    <ChartWrapper>\n                        <Line \n                            width={100}\n                            height={50}       \n                            data={timeLineData} \n                            options={options}/>                         \n                    </ChartWrapper>\n                </Main>\n                <Footer></Footer>\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}